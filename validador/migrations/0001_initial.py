# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import migrations, models
from django.conf import settings


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='C_A_SUBPROG',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('CD_AP_SUBPROG', models.IntegerField()),
                ('C_SUBPROGRAMA', models.IntegerField()),
                ('CVE_SUBPROGRAMA', models.IntegerField()),
                ('C_PROGRAMA', models.IntegerField()),
                ('CVE_PROGRAMA', models.CharField(max_length=60)),
                ('NB_AP_SUBPROG', models.CharField(max_length=60)),
                ('FH_INICIO', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='C_ACTIVIDADES',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('CD_ACT_ECO', models.IntegerField()),
                ('NB_ACTIV_ECONO', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='C_ADMIN',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('ID_ADMIN', models.IntegerField()),
                ('CD_ADMIN', models.IntegerField()),
                ('NB_ADMIN', models.CharField(max_length=60)),
                ('PERIODO', models.CharField(max_length=9)),
            ],
        ),
        migrations.CreateModel(
            name='C_AGEB',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('NB_AGEB', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='C_AP_BEN_OB',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('CD_AP_BENEFICIO_OBRA', models.IntegerField()),
                ('C_UNIDAD_MEDIDA', models.IntegerField()),
                ('CVE_UNIDAD_MEDIDA', models.CharField(max_length=60)),
                ('NB_UNIDAD_MEDIDA', models.CharField(max_length=60)),
                ('FH_INICIO', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='C_AP_DESC',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('CD_AP_DESCRIPCION', models.IntegerField()),
                ('C_ISUBPROGRAMA', models.IntegerField()),
                ('CVE_ISUBPROGRAMA', models.CharField(max_length=60)),
                ('C_SUBPROGRAMA', models.IntegerField()),
                ('CVE_SUBPROGRAMA', models.IntegerField()),
                ('CVE_PROGRAMA', models.CharField(max_length=60)),
                ('NB_ISUBPROGRAMA', models.CharField(max_length=60)),
                ('FH_INICIO', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='C_AP_PROG',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('CD_AP_TP_BENEFICIARIO', models.IntegerField()),
                ('NB_AP_TP_BENEFICIARIO', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='C_BENEFICIO',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('CD_BENEFICIO', models.IntegerField()),
                ('NB_BENEFICIO', models.CharField(max_length=60)),
                ('SEUSAEN', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='C_BENEFICIO_AS',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('CD_BENEFICIO_AS', models.IntegerField()),
                ('NB_BENEFICIO_AS', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='C_BENEFICIO_AS_PROG',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('CD_BENEFICIO_AS', models.IntegerField()),
                ('NB_BENEFICIO_AS', models.CharField(max_length=60)),
                ('ANIO', models.IntegerField()),
                ('CD_PROG_DGGPB', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='C_BENEFICIO_OB',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('CD_BENEFICIO_OB', models.IntegerField()),
                ('NB_BENEFICIO_OB', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='C_BENEFICIO_OB_PROG',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('CD_BENEFICIO_OB', models.IntegerField()),
                ('NB_BENEFICIO_OB', models.CharField(max_length=60)),
                ('ANIO', models.IntegerField()),
                ('CD_PROG_DGGPB', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='C_BENEFICIO_PROG',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('CD_BENEFICIO', models.IntegerField()),
                ('NB_BENEFICIO', models.CharField(max_length=60)),
                ('ANIO', models.IntegerField()),
                ('SEUSAEN', models.CharField(max_length=60)),
                ('CD_PROG_DGGPB', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='C_CARGO',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('CD_TP_CARGO_AS', models.IntegerField()),
                ('NB_TP_CARGO_AS', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='C_CORRESP',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('IN_CORRESP', models.IntegerField()),
                ('NB_CORRESP', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='C_CORRESPONSABILIDAD',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('NB_CORR', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='C_DEPENDENCIA',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('NB_ORIGEN', models.CharField(max_length=12, choices=[(b'', b'------'), (b'FED', b'Federal'), (b'EST', b'Estatal'), (b'MUN', b'Municipal'), (b'PRIV', b'Privada')])),
                ('CD_DEPENDENCIA', models.IntegerField()),
                ('CD_DEPENDENCIA_OFICAL', models.IntegerField()),
                ('ID_ADMIN', models.CharField(max_length=2, blank=True)),
                ('NB_DEPENDENCIA', models.CharField(default=b'', max_length=150)),
                ('NB_DEPEN_CORTO', models.CharField(max_length=15)),
                ('SECTOR', models.CharField(max_length=25)),
                ('LAST', models.CharField(max_length=5, blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='C_EDO_CIVIL',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('CD_EDO_CIVIL', models.IntegerField()),
                ('NB_EDO_CIVIL', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='C_EJECUTOR',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('ID_EJECUTOR', models.IntegerField()),
                ('RFC_EJECUTOR', models.CharField(max_length=60)),
                ('NB_EJECUTOR', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='C_ENTIDAD',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('CD_ENT', models.IntegerField()),
                ('NB_ENTIDAD', models.CharField(max_length=60)),
                ('CD_ENT_RENAPO', models.CharField(max_length=60)),
                ('NB_ENT', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='C_ESTATUS_BEN',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('NB_ESTATUS', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='C_ESTATUS_HOG',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('NB_ESTATUS', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='C_ID_GRUPO',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('CD_GRUPO_ID', models.IntegerField()),
                ('NB_GRUPO_ID', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='C_INTRAPROGRAMAS',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('CD_INTRAPROGRAMA', models.IntegerField()),
                ('CVE_INTRAPROGRAMA', models.IntegerField()),
                ('NB_INTRAPROGRAMA', models.CharField(max_length=60)),
                ('TP_INTRAPROGRAMA', models.CharField(max_length=60)),
                ('NB_DEPENDENCIA', models.CharField(max_length=60)),
                ('NB_UR', models.CharField(max_length=60)),
                ('NB_PROGRAMA', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='C_LOCALIDAD',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('CV_LOC', models.CharField(max_length=4)),
                ('NO_LOC', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='C_MANZANA',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('NB_MANZANA', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='C_MET_PAGO',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('NB_MET', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='C_MUNICIPIO',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('CV_MUN', models.CharField(max_length=3)),
                ('NO_MUN', models.CharField(max_length=255)),
                ('CVE_ENT', models.ForeignKey(to='validador.C_ENTIDAD')),
            ],
        ),
        migrations.CreateModel(
            name='C_PADRON',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('CV_PADRON', models.CharField(max_length=12)),
                ('NB_PADRON', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='C_PARENTESCO',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('CD_PARENTESCO', models.IntegerField()),
                ('NB_PARENTESCO', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='C_PERIODO',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('CD_PROGRAMA', models.CharField(max_length=60)),
                ('ANIO', models.IntegerField()),
                ('PERIODICIDAD', models.CharField(max_length=60)),
                ('NOTA', models.CharField(max_length=60)),
                ('FRASE', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='C_PROGRAMA',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('CD_PROGRAMA', models.IntegerField()),
                ('CD_PROG_OFICIAL', models.CharField(max_length=60)),
                ('ANIO', models.DateField()),
                ('CD_INSTITUCION', models.CharField(max_length=60)),
                ('CD_PROG_DGGPB', models.CharField(max_length=60)),
                ('NB_ORIGEN', models.CharField(max_length=60)),
                ('TP_BENEFICIARIO', models.CharField(max_length=60)),
                ('NB_PROGRAMA', models.CharField(max_length=60)),
                ('CVE_SUBP1', models.IntegerField()),
                ('NB_SUBP1', models.CharField(max_length=60)),
                ('NB_SUBP2', models.CharField(max_length=60)),
                ('NB_PROG', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='C_PROGRAMA_DGTIC',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('CVEPROGRAMA', models.IntegerField()),
                ('C_PROGRAMA', models.IntegerField()),
                ('CVE_PROGRAMA', models.CharField(max_length=60)),
                ('NB_PROGRAMA', models.CharField(max_length=60)),
                ('FH_INICIO', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='C_STATUS',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('CD_STATUS_OB', models.IntegerField()),
                ('NB_STATUS_OB', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='C_TIPO_EJEC',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('CD_TP_MOD_EJEC', models.IntegerField()),
                ('NB_TP_MOD_EJEC', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='C_TP_ACT_SOC',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('TP_ACTOR_SOCIAL', models.IntegerField()),
                ('NB_TP_AS', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='C_TP_ASENTAMIENTO',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('CD_TIPO_ASENTAMIENTO', models.IntegerField()),
                ('NB_TIPO_ASENTAMIENTO', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='C_TP_BEN',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('CD_TP_BEN', models.CharField(max_length=60)),
                ('NB_TP_BEN', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='C_TP_BEN_DET',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('CD_TP_BEN_DET', models.IntegerField()),
                ('NB_TP_BEN_DET', models.CharField(max_length=60)),
                ('SEUSAEN', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='C_TP_BEN_DET_PROG',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('CD_TP_BEN_DET', models.IntegerField()),
                ('NB_TP_BEN_DET', models.CharField(max_length=60)),
                ('ANIO', models.DateField()),
                ('CD_PROG_DGGPB', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='C_TP_BENEFICIO',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('CD_TP_BENEFICIO', models.IntegerField()),
                ('NB_TP_BENEFICIO', models.CharField(max_length=60)),
                ('SEUSAEN', models.CharField(max_length=60, blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='C_TP_BENEFICIO_PROG',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('CD_TP_BENEFICIO', models.IntegerField()),
                ('NB_TP_BENEFICIO', models.CharField(max_length=60)),
                ('ANIO', models.IntegerField()),
                ('SEUSAEN', models.CharField(max_length=60)),
                ('CD_PROG_DGGPB', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='C_TP_EXPEDICION',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('NB_TP', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='C_TP_INSTANCIA',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('CD_TP_INST_EJEC', models.IntegerField()),
                ('NB_TP_INST_EJEC', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='C_TP_INTERV',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('TIPO_INTERV', models.IntegerField()),
                ('NB_TP_INTERVENCION', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='C_TP_VIALIDAD',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('CD_TIPO_VIALIDAD', models.IntegerField()),
                ('NB_TIPO_VIALIDAD', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='C_UR',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('CD_INSTITUCION', models.CharField(max_length=60)),
                ('CD_DEPENDENCIA', models.IntegerField()),
                ('CD_U_R', models.CharField(max_length=20)),
                ('CD_U_R_OFICIAL', models.CharField(max_length=20)),
                ('ID_ADMIN', models.IntegerField()),
                ('NB_UR', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='Cat_AnioEjercicio',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('AnioEjercicio', models.CharField(default=b'', max_length=4)),
            ],
        ),
        migrations.CreateModel(
            name='Cat_Periodos',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('identPeriodo', models.CharField(max_length=2)),
                ('nombrePeriodo', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Cat_TipoPadron',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('nombrePadron', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Enlace',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('unidadAdministrativa', models.ForeignKey(to='validador.C_DEPENDENCIA')),
                ('user', models.OneToOneField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EstructuraActorSocial',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('ID_ACTOR_SOCIAL', models.CharField(default=b'', max_length=50, verbose_name=b'ID del Actor Social', blank=True)),
                ('NB_RAZON_SOCIAL', models.CharField(default=b'', max_length=255, verbose_name=b'Raz\xc3\xb3n social del Actor Social')),
                ('NB_RFC_AS', models.CharField(default=b'', max_length=13, verbose_name=b'Registro Federal de Contribuyentes del Actor Social')),
                ('NB_CLUNI', models.CharField(default=b'', max_length=14, verbose_name=b'Clave Inscripci\xc3\xb3n en el Registro Federal de las Organizaciones de la Sociedad Civil', blank=True)),
                ('FH_CONSTITUCION', models.DateField(verbose_name=b'Fecha de Constituci\xc3\xb3n del Actor Social')),
                ('NB_PRIMER_AP', models.CharField(default=b'', max_length=50, verbose_name=b'Primer apellido del integrante del Actor Social Beneficiario')),
                ('NB_SEGUNDO_AP', models.CharField(default=b'', max_length=50, verbose_name=b'Segundo apellido del integrante del Actor Social Beneficiario', blank=True)),
                ('NB_NOMBRE', models.CharField(default=b'', max_length=50, verbose_name=b'Nombre del integrante del Actor Social Beneficiario')),
                ('NB_CURP', models.CharField(default=b'', max_length=18, verbose_name=b'CURP del integrante del Actor Social Beneficiario')),
                ('FH_NACIMIENTO', models.DateField(verbose_name=b'Fecha de nacimiento del integrante del Actor Social del Beneficiario')),
                ('CD_SEXO', models.CharField(default=None, max_length=1, verbose_name=b'Sexo', choices=[(b'', b'------'), (b'H', b'Hombre'), (b'M', b'Mujer')])),
                ('IN_TITULAR', models.CharField(max_length=1, verbose_name=b'Indica si la persona es titular del beneficio', choices=[(b'', b'------'), (b'1', b'S\xc3\xad'), (b'0', b'No')])),
                ('NB_SUBPROGRAMA', models.CharField(default=b'', max_length=60, verbose_name=b'Nombre del subprograma', blank=True)),
                ('FH_ALTA', models.DateField(verbose_name=b'Fecha en la que el Actor Social Beneficiario se incorpor\xc3\xb3 al Programa de Desarrollo Social')),
                ('CD_ESTATUS_INT', models.IntegerField(verbose_name=b'Estatus del integrante en el mes en que recibe el apoyo')),
                ('CD_ESTATUS_AS', models.IntegerField(verbose_name=b'Estatus del Actor Social en el mes en que recibe el apoyo')),
                ('CD_TP_EXPEDICION_AS', models.IntegerField(verbose_name=b'Tipo de expedici\xc3\xb3n del apoyo del Actor Social')),
                ('NU_BENEFICIOS', models.DecimalField(verbose_name=b'Cantidad Total de Beneficios entregados, agrupados por Beneficio entregado', max_digits=10, decimal_places=2)),
                ('NU_IMP_MONETARIO', models.DecimalField(verbose_name=b'Importe total en pesos que representa(n) el (los) Beneficio(s) entregado(s)', max_digits=11, decimal_places=2, blank=True)),
                ('NU_MES_PAGO', models.IntegerField(verbose_name=b'Mes en que se entreg\xc3\xb3 el (los) Beneficio(s)')),
                ('NB_PERIODO_CORRES', models.CharField(default=b'', max_length=4, verbose_name=b'Periodo correspondiente a los apoyos pagados')),
                ('NOMVIAL', models.CharField(default=b'', max_length=255, verbose_name=b'Nombre de la vialidad')),
                ('CARRETERA', models.CharField(default=b'', max_length=255, verbose_name=b'Nombre compuesto de la carretera del Domicilio Fiscal del Actor Social Beneficiario')),
                ('CAMINO', models.CharField(default=b'', max_length=255, verbose_name=b'Nombre compuesto del camino del Domicilio Fiscal del Actor Social Beneficiario')),
                ('NUMEXTNUM1', models.IntegerField(verbose_name=b'N\xc3\xbamero exterior del Domicilio Fiscal del Actor Social', blank=True)),
                ('NUMEXTNUM2', models.IntegerField(verbose_name=b'N\xc3\xbamero exterior del Domicilio Fiscal del Actor Social', blank=True)),
                ('NUMEXTALF1', models.CharField(default=b'', max_length=35, verbose_name=b'Parte alfanum\xc3\xa9rica del n\xc3\xbamero exterior del Domicilio Geogr\xc3\xa1fico del Domicilio Fiscal del Actor Social')),
                ('NUMEXTANT', models.CharField(default=b'', max_length=35, verbose_name=b'N\xc3\xbamero exterior anterior del Domicilio Fiscal del Actor Social', blank=True)),
                ('NUMINTNUM', models.IntegerField(verbose_name=b'N\xc3\xbamero interior del Domicilio Fiscal del Actor Social', blank=True)),
                ('NUMINTALF', models.CharField(default=b'', max_length=35, verbose_name=b'Parte alfanum\xc3\xa9rica del n\xc3\xbamero interior del Domicilio Geogr\xc3\xa1fico del Domicilio Fiscal del Actor Social')),
                ('NOMASEN', models.CharField(default=b'', max_length=255, verbose_name=b'Nombre del asentamiento humano del Domicilio Fiscal del Actor Social')),
                ('CP', models.CharField(default=b'', max_length=5, verbose_name=b'C\xc3\xb3digo Postal del Domicilio Fiscal del Actor Social')),
                ('NOMREF1', models.CharField(default=b'', max_length=255, verbose_name=b'Nombre de la primera de las entre-vialidades de referencia del Domicilio Fiscal del Actor Social')),
                ('NOMREF2', models.CharField(default=b'', max_length=255, verbose_name=b'Nombre de la segunda de las entre-vialidades de referencia del Domicilio Fiscal del Actor Social')),
                ('NOMREF3', models.CharField(default=b'', max_length=255, verbose_name=b'Nombre de la vialidad que se ubica en la parte posterior del Domicilio Fiscal del Actor Social')),
                ('DESCRUBIC', models.CharField(default=b'', max_length=255, verbose_name=b'Descripci\xc3\xb3n de la ubicaci\xc3\xb3n')),
                ('LONGITUD', models.DecimalField(verbose_name=b'Longitud', max_digits=11, decimal_places=6)),
                ('LATITUD', models.DecimalField(verbose_name=b'Latitud', max_digits=9, decimal_places=6)),
                ('AGEB', models.ForeignKey(related_name='EAS_ageb', verbose_name=b'Clave del \xc3\x81rea Geogr\xc3\xa1fica Estad\xc3\xadstica B\xc3\xa1sica', to='validador.C_AGEB')),
                ('CD_ACT_ECO', models.ForeignKey(verbose_name=b'Clave de la actividad econ\xc3\xb3mica', blank=True, to='validador.C_ACTIVIDADES')),
                ('CD_BENEFICIO_AS', models.ForeignKey(verbose_name=b'Clave del Beneficio entregado', to='validador.C_BENEFICIO_AS')),
                ('CD_DEPENDENCIA', models.ForeignKey(verbose_name=b'Clave de la dependencia que opera el Programa de Desarrollo Social', to='validador.C_DEPENDENCIA')),
                ('CD_EDO_NAC', models.ForeignKey(related_name='EAS_cdedonac', verbose_name=b'Clave del estado de nacimiento del integrante del Actor Social Beneficiario', to='validador.C_ENTIDAD')),
                ('CD_ENT_PAGO', models.ForeignKey(related_name='EAS_cdentpago', default=b'', verbose_name=b'Clave de la Entidad Federativa donde se entreg\xc3\xb3 el Beneficio', to='validador.C_ENTIDAD')),
                ('CD_GRUPO_ID', models.ForeignKey(verbose_name=b'Tipo de Agrupaci\xc3\xb3n', blank=True, to='validador.C_ID_GRUPO')),
                ('CD_INSTITUCION', models.ForeignKey(default=b'', verbose_name=b'Clave de la instituci\xc3\xb3n UAR', to='validador.C_UR', max_length=5)),
                ('CD_INTRAPROGRAMA', models.ForeignKey(verbose_name=b'Clave del subprograma', blank=True, to='validador.C_INTRAPROGRAMAS')),
                ('CD_LOC_PAGO', models.ForeignKey(default=b'', verbose_name=b'Clave de la Localidad donde se entreg\xc3\xb3 el Beneficio', to='validador.C_LOCALIDAD', max_length=4)),
                ('CD_MET_PAGO', models.ForeignKey(default=b'', verbose_name=b'Clave del m\xc3\xa9todo de pago, con el que se otorga el Beneficio', to='validador.C_MET_PAGO', max_length=2)),
                ('CD_MUN_PAGO', models.ForeignKey(default=b'', verbose_name=b'Clave del Municipio donde se entreg\xc3\xb3 el Beneficio', to='validador.C_MUNICIPIO', max_length=3)),
                ('CD_PADRON', models.ForeignKey(default=b'', verbose_name=b'Clave del Padr\xc3\xb3n', to='validador.C_PADRON', max_length=4)),
                ('CD_TP_BENEFICIO', models.ForeignKey(verbose_name=b'Clave del tipo de Beneficio', to='validador.C_TP_BENEFICIO')),
                ('CD_TP_CARGO_AS', models.ForeignKey(verbose_name=b'Clave del tipo de cargo que tiene el integrante dentro del Actor Social Beneficiario', to='validador.C_CARGO')),
                ('CLAVE_MZNA', models.ForeignKey(default=b'', verbose_name=b'Clave de la Manzana', to='validador.C_MANZANA', max_length=3)),
                ('NOM_ENT', models.ForeignKey(related_name='EAS_noment', default=b'', verbose_name=b'Nombre de la Entidad Federativa del Domicilio Fiscal del Actor Social', to='validador.C_ENTIDAD')),
                ('NOM_LOC', models.ForeignKey(related_name='EAS_nomloc', default=b'', verbose_name=b'Nombre de la Localidad de residencia del Domicilio Fiscal del Actor Social', to='validador.C_LOCALIDAD', max_length=255)),
                ('NOM_MUN', models.ForeignKey(related_name='EAS_nommun', default=b'', verbose_name=b'Nombre del Municipio de residencia del Domicilio Fiscal del Actor Social', to='validador.C_MUNICIPIO', max_length=255)),
                ('TIPOASEN', models.ForeignKey(verbose_name=b'Tipo de asentamiento humano del Domicilio Fiscal del Actor Social', to='validador.C_TP_ASENTAMIENTO')),
                ('TIPOREF1', models.ForeignKey(related_name='EAS_tiporef1', verbose_name=b'Tipo de la primera de las entre-vialidades de referencia del Domicilio Fiscal del Actor Social', to='validador.C_TP_VIALIDAD')),
                ('TIPOREF2', models.ForeignKey(related_name='EAS_tiporef2', verbose_name=b'Tipo de la segunda de las entre-vialidades de referencia del Domicilio Fiscal del Actor Social', to='validador.C_TP_VIALIDAD')),
                ('TIPOREF3', models.ForeignKey(related_name='EAS_tiporef3', verbose_name=b'Tipo de la vialidad ubicada en la parte posterior del Domicilio Fiscal del Actor Social', to='validador.C_TP_VIALIDAD')),
                ('TIPOVIAL', models.ForeignKey(verbose_name=b'Tipo de vialidad del Domicilio Domicilio Fiscal del Actor Social Beneficiario', to='validador.C_TP_VIALIDAD')),
                ('TP_ACTOR_SOCIAL', models.ForeignKey(verbose_name=b'Clave de Tipo de Actor Social', to='validador.C_TP_ACT_SOC')),
            ],
        ),
        migrations.CreateModel(
            name='EstructuraPersonas',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('ID_HOGAR', models.CharField(default=b'', max_length=30, verbose_name=b'ID del hogar')),
                ('ID_CUIS_PS', models.CharField(default=b'', max_length=40, verbose_name=b'ID CUIS')),
                ('ID_CUIS_SEDESOL', models.CharField(max_length=40, verbose_name=b'ID CUIS SEDESOL')),
                ('FH_LEVANTAMIENTO', models.DateField(verbose_name=b'Fecha de levantamiento')),
                ('ID_PERSONA', models.CharField(default=b'', max_length=40, verbose_name=b'ID de Persona')),
                ('NB_PRIMER_AP', models.CharField(default=b'', max_length=50, verbose_name=b'Primer apellido')),
                ('NB_SEGUNDO_AP', models.CharField(default=b'', max_length=50, verbose_name=b'Segundo apellido', blank=True)),
                ('NB_NOMBRE', models.CharField(default=b'', max_length=50, verbose_name=b'Nombre')),
                ('FH_NACIMIENTO', models.DateField(verbose_name=b'Fecha de nacimiento')),
                ('CD_SEXO', models.CharField(default=None, max_length=1, verbose_name=b'Sexo', choices=[(b'', b'------'), (b'H', b'Hombre'), (b'M', b'Mujer')])),
                ('NB_CURP', models.CharField(default=b'', max_length=18, verbose_name=b'C.U.R.P.')),
                ('IN_HUELLA', models.CharField(default=None, max_length=1, verbose_name=b'Registro de Huella digital', choices=[(b'', b'------'), (b'1', b'S\xc3\xad'), (b'0', b'No')])),
                ('IN_IRIS', models.CharField(default=None, max_length=1, verbose_name=b'Registro del Iris', choices=[(b'', b'------'), (b'1', b'S\xc3\xad'), (b'0', b'No')])),
                ('NB_SUBPROGRAMA', models.CharField(default=b'', max_length=60, verbose_name=b'Nombre del Subprograma', blank=True)),
                ('FH_ALTA', models.DateField(verbose_name=b'Fecha de alta')),
                ('NB_PERIODO_CORRES', models.CharField(default=b'', max_length=7, verbose_name=b'Periodo correspondiente a los apoyos pagados')),
                ('IN_TITULAR', models.CharField(default=None, max_length=1, verbose_name=b'Indica si la persona es titular del Beneficio', choices=[(b'', b'------'), (b'1', b'S\xc3\xad'), (b'0', b'No')])),
                ('NU_BENEFICIOS', models.DecimalField(verbose_name=b'Cantidad total de Beneficios entregados', max_digits=10, decimal_places=2)),
                ('NU_IMP_MONETARIO', models.DecimalField(verbose_name=b'Importe total en pesos que representa(n) el (los) Beneficio(s) entregado(s)', max_digits=10, decimal_places=2, blank=True)),
                ('NU_MES_PAGO', models.IntegerField(verbose_name=b'Mes en que se entreg\xc3\xb3 el (los) Beneficio(s)')),
                ('ID_AGRUPADOR', models.CharField(default=b'', max_length=20, verbose_name=b'ID Agrupador')),
                ('NOMVIAL', models.CharField(default=b'', max_length=255, verbose_name=b'Nombre de la vialidad')),
                ('CARRETERA', models.CharField(default=b'', max_length=255, verbose_name=b'Nombre compuesto de la carretera del Domicilio Geogr\xc3\xa1fico del Beneficiario')),
                ('CAMINO', models.CharField(default=b'', max_length=255, verbose_name=b'Nombre compuesto del camino del Domicilio Geogr\xc3\xa1fico del Beneficiario')),
                ('NUMEXTNUM1', models.IntegerField(verbose_name=b'N\xc3\xbamero exterior del Domicilio Geogr\xc3\xa1fico del Beneficiario', blank=True)),
                ('NUMEXTNUM2', models.IntegerField(verbose_name=b'N\xc3\xbamero exterior del Domicilio Geogr\xc3\xa1fico del Beneficiario', blank=True)),
                ('NUMEXTALF1', models.CharField(default=b'', max_length=35, verbose_name=b'Parte alfanum\xc3\xa9rica del n\xc3\xbamero exterior del Domicilio Geogr\xc3\xa1fico del Beneficiario')),
                ('NUMEXTANT', models.CharField(default=b'', max_length=35, verbose_name=b'Parte alfanum\xc3\xa9rica del n\xc3\xbamero exterior anterior del Domicilio Geogr\xc3\xa1fico del Beneficiario', blank=True)),
                ('NUMINTNUM', models.IntegerField(verbose_name=b'N\xc3\xbamero interior del Domicilio Geogr\xc3\xa1fico del Beneficiario', blank=True)),
                ('NUMINTALF', models.CharField(default=b'', max_length=35, verbose_name=b'Parte alfanum\xc3\xa9rica del n\xc3\xbamero interior del Domicilio Geogr\xc3\xa1fico del Beneficiario')),
                ('NOMASEN', models.CharField(default=b'', max_length=255, verbose_name=b'Nombre del Asentamiento humano del Domicilio Geogr\xc3\xa1fico del Beneficiario')),
                ('CP', models.CharField(default=b'', max_length=5, verbose_name=b'C\xc3\xb3digo Postal del Domicilio Geogr\xc3\xa1fico del Beneficiario')),
                ('NOMREF1', models.CharField(default=b'', max_length=255, verbose_name=b'Nombre de la primera de las entre-vialidades de referencia del Domicilio Geogr\xc3\xa1fico del Beneficiario')),
                ('NOMREF2', models.CharField(default=b'', max_length=255, verbose_name=b'Nombre de la segunda de las entre-vialidades de referencia del Domicilio Geogr\xc3\xa1fico del Beneficiario')),
                ('NOMREF3', models.CharField(default=b'', max_length=255, verbose_name=b'Nombre de la vialidad que se ubica en la parte posterior del Domicilio Geogr\xc3\xa1fico del Beneficiario')),
                ('DESCRUBIC', models.CharField(default=b'', max_length=255, verbose_name=b'Descripci\xc3\xb3n de la ubicaci\xc3\xb3n')),
                ('LONGITUD', models.DecimalField(verbose_name=b'Longitud', max_digits=11, decimal_places=6)),
                ('LATITUD', models.DecimalField(verbose_name=b'Latitud', max_digits=9, decimal_places=6)),
                ('AGEB', models.ForeignKey(related_name='EPER_ageb', verbose_name=b'Clave del \xc3\x81rea Geogr\xc3\xa1fica Estad\xc3\xadstica B\xc3\xa1sica', to='validador.C_AGEB')),
                ('CD_BENEFICIO', models.ForeignKey(verbose_name=b'Clave del Beneficio entregado', to='validador.C_BENEFICIO')),
                ('CD_DEPENDENCIA', models.ForeignKey(verbose_name=b'Dependencia', to='validador.C_DEPENDENCIA')),
                ('CD_EDO_CIVIL', models.ForeignKey(verbose_name=b'Estado Civil', to='validador.C_EDO_CIVIL')),
                ('CD_EDO_NAC', models.ForeignKey(related_name='edonac1', verbose_name=b'Estado de nacimiento', to='validador.C_ENTIDAD')),
                ('CD_ENT_PAGO', models.ForeignKey(related_name='cdentpago', verbose_name=b'Entidad Federativa de pago', to='validador.C_ENTIDAD')),
                ('CD_ESTATUS_BEN', models.ForeignKey(verbose_name=b'Estatus del beneficiario', to='validador.C_ESTATUS_BEN')),
                ('CD_ESTATUS_HOG', models.ForeignKey(verbose_name=b'Estatus del hogar', to='validador.C_ESTATUS_HOG')),
                ('CD_INSTITUCION', models.ForeignKey(default=b'', verbose_name=b'Instituci\xc3\xb3n', to='validador.C_UR', max_length=5)),
                ('CD_INTRAPROGRAMA', models.ForeignKey(verbose_name=b'Clave del Subprograma', blank=True, to='validador.C_INTRAPROGRAMAS')),
                ('CD_LOC_PAGO', models.ForeignKey(related_name='cdlocpago', verbose_name=b'Localidad de pago', to='validador.C_LOCALIDAD')),
                ('CD_MET_PAGO', models.ForeignKey(default=b'', verbose_name=b'Clave del m\xc3\xa9todo de pago', to='validador.C_MET_PAGO', max_length=2)),
                ('CD_MUN_PAGO', models.ForeignKey(related_name='cdmunpago', verbose_name=b'Municipio de pago', to='validador.C_MUNICIPIO')),
                ('CD_PADRON', models.ForeignKey(default=b'', verbose_name=b'Padr\xc3\xb3n', to='validador.C_PADRON', max_length=4)),
                ('CD_PARENTESCO', models.ForeignKey(verbose_name=b'Parentesco de la Persona con el Jefe del Hogar', to='validador.C_PARENTESCO')),
                ('CD_TP_BENEFICIO', models.ForeignKey(verbose_name=b'Tipo de beneficio', to='validador.C_TP_BENEFICIO')),
                ('CD_TP_BEN_DET', models.ForeignKey(verbose_name=b'Clave del tipo de Beneficiario, af\xc3\xadn con el motivo por el cual se otorga el Beneficio', to='validador.C_TP_BEN_DET')),
                ('CD_TP_EXPEDICION', models.ForeignKey(verbose_name=b'Tipo de expedici\xc3\xb3n del apoyo', to='validador.C_TP_EXPEDICION')),
                ('CLAVE_MZNA', models.ForeignKey(default=b'', verbose_name=b'Clave de manzana', to='validador.C_MANZANA', max_length=3)),
                ('CVE_LOC', models.ForeignKey(related_name='cveloc', verbose_name=b'Clave de la localidad del Domicilio Geogr\xc3\xa1fico del Beneficiario', to='validador.C_LOCALIDAD')),
                ('CVE_MUN', models.ForeignKey(related_name='cvemun', verbose_name=b'Clave del municipio del Domicilio Geogr\xc3\xa1fico del Beneficiario', to='validador.C_MUNICIPIO')),
                ('IN_CORRESP', models.ForeignKey(verbose_name=b'Indicador del cumplimiento de la corresponsabilidad', to='validador.C_CORRESPONSABILIDAD')),
                ('NOM_ENT', models.ForeignKey(related_name='noment', verbose_name=b'Nombre de la Entidad Federativa del Domicilio Geogr\xc3\xa1fico del Beneficiario', to='validador.C_ENTIDAD')),
                ('NOM_LOC', models.ForeignKey(related_name='nomloc', verbose_name=b'Nombre de la localidad del Domicilio Geogr\xc3\xa1fico del Beneficiario', to='validador.C_LOCALIDAD')),
                ('NOM_MUN', models.ForeignKey(related_name='nommun', verbose_name=b'Nombre del municipio del Domicilio Geogr\xc3\xa1fico del Beneficiario', to='validador.C_MUNICIPIO')),
                ('TIPOASEN', models.ForeignKey(verbose_name=b'Tipo de Asentamiento humano del Domicilio Geogr\xc3\xa1fico del Beneficiario', to='validador.C_TP_ASENTAMIENTO')),
                ('TIPOREF1', models.ForeignKey(related_name='tiporef1', verbose_name=b'Tipo de la primera de las entre-vialidades de referencia del Domicilio Geogr\xc3\xa1fico del Beneficiario', to='validador.C_TP_VIALIDAD')),
                ('TIPOREF2', models.ForeignKey(related_name='tiporef2', verbose_name=b'Tipo de la segunda de las entre-vialidades de referencia del Domicilio Geogr\xc3\xa1fico del Beneficiario', to='validador.C_TP_VIALIDAD')),
                ('TIPOREF3', models.ForeignKey(related_name='tiporef3', verbose_name=b'Tipo de la vialidad ubicada en la parte posterior del Domicilio Geogr\xc3\xa1fico del Beneficiario', to='validador.C_TP_VIALIDAD')),
                ('TIPOVIAL', models.ForeignKey(related_name='tipovial', verbose_name=b'Tipo de vialidad', to='validador.C_TP_VIALIDAD')),
            ],
        ),
        migrations.CreateModel(
            name='EstructuraPoblacion',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('CD_PADRON', models.CharField(default=b'', max_length=4, verbose_name=b'Clave del Padr\xc3\xb3n (Obligatorio)')),
                ('NU_BENEFICIOS', models.DecimalField(verbose_name=b'Cantidad de beneficios entregados (Obligatorio)', max_digits=10, decimal_places=2)),
                ('NU_BENEF', models.IntegerField(verbose_name=b'Estimaci\xc3\xb3n del n\xc3\xbamero de beneficiados (Obligatorio)')),
                ('NU_BENEF_HOM', models.IntegerField(verbose_name=b'Estimaci\xc3\xb3n del n\xc3\xbamero de hombres beneficiados (Obligatorio)')),
                ('NU_BENEF_MUJ', models.IntegerField(verbose_name=b'Estimaci\xc3\xb3n del n\xc3\xbamero de mujeres beneficiadas (Obligatorio)')),
                ('NU_VIVIENDAS', models.IntegerField(verbose_name=b'Estimaci\xc3\xb3n del n\xc3\xbamero de viviendas beneficiadas', blank=True)),
                ('RFC_EJECUTOR', models.CharField(default=b'', max_length=13, verbose_name=b'R.F.C. del Ejecutor (Obligatorio)')),
                ('ID_OBRA', models.CharField(default=b'', max_length=12, verbose_name=b'ID de la obra (Obligatorio)')),
                ('NB_OBRA', models.CharField(default=b'', max_length=255, verbose_name=b'Descripci\xc3\xb3n de la obra (Obligatorio)')),
                ('NU_INV_TOT_EJE', models.DecimalField(verbose_name=b'Inversi\xc3\xb3n Total ejercida(en pesos)(Obligatorio)', max_digits=10, decimal_places=2)),
                ('NU_INV_FED_EJE', models.DecimalField(verbose_name=b'Inversi\xc3\xb3n Federal(en pesos)(Obligatorio)', max_digits=10, decimal_places=2)),
                ('NU_INV_EST_EJE', models.DecimalField(verbose_name=b'Inversi\xc3\xb3n Estatal(en pesos)(Obligatorio)', max_digits=10, decimal_places=2)),
                ('NU_INV_MUN_EJE', models.DecimalField(verbose_name=b'Inversi\xc3\xb3n Municipal(en pesos)(Obligatorio)', max_digits=10, decimal_places=2)),
                ('NU_INV_OTRAS_EJE', models.DecimalField(verbose_name=b'Otras inversiones(en pesos)(Obligatorio)', max_digits=10, decimal_places=2)),
                ('NB_INV_OTRAS_EJE', models.CharField(default=b'', max_length=255, verbose_name=b'Descripci\xc3\xb3n de otras inversiones', blank=True)),
                ('FH_INICIO', models.DateField(verbose_name=b'Fecha en la que la obra se inici\xc3\xb3 (Obligatorio)')),
                ('FH_TERMINO', models.DateField(verbose_name=b'Fecha en la que la obra fue terminada (Obligatorio)')),
                ('NOMVIAL', models.CharField(default=b'', max_length=255, verbose_name=b'Nombre de la vialidad (Obligatorio)')),
                ('CARRETERA', models.CharField(default=b'', max_length=255, verbose_name=b'Nombre de la carretera (Obligatorio)')),
                ('CAMINO', models.CharField(default=b'', max_length=255, verbose_name=b'Nombre del camino donde se encuentra el domicilio (Obligatorio)')),
                ('NUMEXTNUM1', models.IntegerField(verbose_name=b'N\xc3\xbamero exterior del domicilio (Obligatorio)', blank=True)),
                ('NUMEXTNUM2', models.IntegerField(verbose_name=b'N\xc3\xbamero exterior del domicilio 2', blank=True)),
                ('NUMEXTALF1', models.CharField(default=b'', max_length=35, verbose_name=b'Parte alfanum\xc3\xa9rica del n\xc3\xbamero exterior del domicilio')),
                ('NUMEXTANT', models.CharField(default=b'', max_length=35, verbose_name=b'Parte alfanum\xc3\xa9rica del n\xc3\xbamero exterior anterior del domicilio', blank=True)),
                ('NUMINTNUM', models.IntegerField(verbose_name=b'N\xc3\xbamero interior del domicilio', blank=True)),
                ('NUMINTALF', models.CharField(default=b'', max_length=35, verbose_name=b'Parte alfanum\xc3\xa9rica del n\xc3\xbamero interior del domicilio')),
                ('NOMASEN', models.CharField(default=b'', max_length=255, verbose_name=b'Nombre del asentamiento humano')),
                ('CP', models.CharField(default=b'', max_length=5, verbose_name=b'C\xc3\xb3digo Postal')),
                ('NOMREF1', models.CharField(default=b'', max_length=255, verbose_name=b'Nombre de la primera de las entre vialidades de referencia')),
                ('NOMREF2', models.CharField(default=b'', max_length=255, verbose_name=b'Nombre de la segunda de las entre vialidades de referencia')),
                ('NOMREF3', models.CharField(default=b'', max_length=255, verbose_name=b'Nombre de la tercera de las entre vialidades de referencia')),
                ('DESCRUBIC', models.CharField(default=b'', max_length=255, verbose_name=b'Descripci\xc3\xb3n de la ubicaci\xc3\xb3n del domicilio')),
                ('LONGITUD', models.DecimalField(verbose_name=b'Longitud', max_digits=11, decimal_places=6)),
                ('LATITUD', models.DecimalField(verbose_name=b'Latitud', max_digits=9, decimal_places=6)),
                ('CD_AP_BENEFICIO_OBRA', models.ForeignKey(verbose_name=b'Clave del Tipo de Beneficio entregado (Obligatorio)', to='validador.C_AP_BEN_OB')),
                ('CD_AP_DESCRIPCION', models.ForeignKey(verbose_name=b'Clave de la Descripci\xc3\xb3n (Obligatorio)', to='validador.C_AP_DESC')),
                ('CD_AP_SUBPROG', models.ForeignKey(verbose_name=b'Clave del Subprograma (Obligatorio)', to='validador.C_A_SUBPROG')),
                ('CD_AP_TP_BENEFICIARIO', models.ForeignKey(verbose_name=b'Clave del Tipo de Poblaci\xc3\xb3n (Obligatorio)', to='validador.C_AP_PROG')),
                ('CD_DEPENDENCIA', models.ForeignKey(verbose_name=b'Clave de la Dependencia (Obligatorio)', to='validador.C_DEPENDENCIA')),
                ('CD_INSTITUCION', models.ForeignKey(verbose_name=b'Clave de la Instituci\xc3\xb3n (Obligatorio)', to='validador.C_UR')),
                ('CD_INTRAPROGRAMA', models.ForeignKey(verbose_name=b'Clave del subprograma o proyecto', to='validador.C_INTRAPROGRAMAS')),
                ('CD_TP_INST_EJEC', models.ForeignKey(verbose_name=b'Clave del Tipo de Instancia Ejecutora (Obligatorio)', to='validador.C_TP_INSTANCIA')),
                ('CD_TP_MOD_EJEC', models.ForeignKey(verbose_name=b'Clave de la modalidad de la ejecuci\xc3\xb3n (Obligatorio)', to='validador.C_TIPO_EJEC')),
                ('CVEPROGRAMA', models.ForeignKey(verbose_name=b'Clave del Programa de Desarrollo Social (Obligatorio)', to='validador.C_PROGRAMA_DGTIC')),
                ('ID_EJECUTOR', models.ForeignKey(verbose_name=b'Clave del Ejecutor (Obligatorio)', to='validador.C_EJECUTOR')),
                ('NOM_ENT', models.ForeignKey(related_name='EntidadNombre1', verbose_name=b'Nombre de la Entidad Federativa de residencia', to='validador.C_ENTIDAD')),
                ('NOM_LOC', models.ForeignKey(related_name='LocalidadNombre1', verbose_name=b'Nombre de la localidad de residencia', to='validador.C_LOCALIDAD')),
                ('NOM_MUN', models.ForeignKey(related_name='MunicipioNombre1', verbose_name=b'Nombre del Municipio de residencia', to='validador.C_MUNICIPIO')),
                ('TIPOASEN', models.ForeignKey(verbose_name=b'Tipo de Asentamiento humano', to='validador.C_TP_ASENTAMIENTO')),
                ('TIPOREF1', models.ForeignKey(related_name='TIPOVIAL2', verbose_name=b'Tipo de la primera de las entre vialidades de referencia', to='validador.C_TP_VIALIDAD')),
                ('TIPOREF2', models.ForeignKey(related_name='TIPOVIAL3', verbose_name=b'Tipo de la segunda de las entre vialidades de referencia', to='validador.C_TP_VIALIDAD')),
                ('TIPOREF3', models.ForeignKey(related_name='TIPOVIAL4', verbose_name=b'Tipo de la tercera de las entre vialidades de referencia', to='validador.C_TP_VIALIDAD')),
                ('TIPOVIAL', models.ForeignKey(related_name='TIPOVIAL', verbose_name=b'Tipo de vialidad donde se encuentra localizada la obra (Obligatorio)', to='validador.C_TP_VIALIDAD')),
                ('TIPO_INTERV', models.ForeignKey(verbose_name=b'Tipo de intervenci\xc3\xb3n del Programa', to='validador.C_TP_INTERV')),
            ],
        ),
        migrations.CreateModel(
            name='EtapasTrabajos',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('nombreEtapa', models.CharField(default=b'', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='TrabajosRealizados',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('FechaInicio', models.DateTimeField(auto_now_add=True)),
                ('UltimaActualizacion', models.DateField(auto_now=True)),
                ('CantidadRegistros', models.IntegerField(default=0)),
                ('AnioEjercicio', models.ForeignKey(default=None, to='validador.Cat_AnioEjercicio')),
                ('Etapa', models.ForeignKey(to='validador.EtapasTrabajos')),
                ('TipoPadron', models.ForeignKey(default=None, to='validador.Cat_TipoPadron')),
                ('Trimestre', models.ForeignKey(default=None, to='validador.Cat_Periodos')),
                ('Usuario', models.ForeignKey(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='estructurapoblacion',
            name='trabajo',
            field=models.ForeignKey(to='validador.TrabajosRealizados'),
        ),
        migrations.AddField(
            model_name='estructurapersonas',
            name='trabajo',
            field=models.ForeignKey(to='validador.TrabajosRealizados'),
        ),
        migrations.AddField(
            model_name='estructuraactorsocial',
            name='trabajo',
            field=models.ForeignKey(to='validador.TrabajosRealizados'),
        ),
        migrations.AddField(
            model_name='c_localidad',
            name='CVE_MUN',
            field=models.ForeignKey(to='validador.C_MUNICIPIO'),
        ),
    ]
